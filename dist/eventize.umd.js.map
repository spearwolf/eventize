{"version":3,"file":"eventize.umd.js.map","sources":["../src/constants.js","../src/EventListener.js","../src/EventStore.js","../src/EventKeeper.js","../src/propUtils.js","../src/logUtils.js","../src/subscribeTo.js","../src/inject.js","../src/eventize.js"],"sourcesContent":["export const EVENT_CATCH_EM_ALL = '*';\n\nexport const LISTENER_UNKNOWN       = 0;\nexport const LISTENER_IS_FUNC       = 1;\nexport const LISTENER_IS_NAMED_FUNC = 2;\nexport const LISTENER_IS_OBJ        = 4;\n\nexport const PRIO_MAX     = Number.POSITIVE_INFINITY;\nexport const PRIO_A       = 1000000000;\nexport const PRIO_B       = 1000000;\nexport const PRIO_C       = 1000;\nexport const PRIO_DEFAULT = 0;\nexport const PRIO_LOW     = -10000;\nexport const PRIO_MIN     = Number.NEGATIVE_INFINITY;\n\nexport const NAMESPACE = (() => {\n  if (!Symbol.eventize) {\n    Symbol.eventize = Symbol('eventize');\n  }\n  return Symbol.eventize;\n})();\n\nexport const LOG_NAMESPACE = '[@spearwolf/eventize]';\n","import {\n  EVENT_CATCH_EM_ALL,\n  LISTENER_IS_FUNC,\n  LISTENER_IS_NAMED_FUNC,\n  LISTENER_IS_OBJ,\n} from './constants';\n\nconst apply = (context, func, args) => {\n  if (typeof func === 'function') {\n    func.apply(context, args);\n  }\n};\n\nconst emit = (eventName, listener, args) => apply(\n  listener,\n  listener.emit,\n  [eventName].concat(args),\n);\n\nconst detectListenerType = (listener) => {\n  switch (typeof listener) {\n    case 'function':\n      return LISTENER_IS_FUNC;\n    case 'string':\n      return LISTENER_IS_NAMED_FUNC;\n    case 'object':\n      return LISTENER_IS_OBJ;\n  }\n};\n\nlet lastId = 0;\nconst createUniqId = () => ++lastId;\n\nexport default class EventListener {\n  constructor(eventName, priority, listener, listenerObject = null) {\n    this.id = createUniqId();\n    this.eventName = eventName;\n    this.isCatchEmAll = eventName === EVENT_CATCH_EM_ALL;\n    this.listener = listener;\n    this.listenerObject = listenerObject;\n    this.priority = priority;\n    this.listenerType = detectListenerType(listener);\n    this.callAfterApply = undefined;\n    this.isRemoved = false;\n  }\n\n  isEqual(listener, listenerObject = null) {\n    if (listener === this) return true;\n    if (typeof listener === 'number' && listener === this.id) return true;\n    if (listenerObject === null && typeof listener === 'string') {\n      if (listener === EVENT_CATCH_EM_ALL) return true;\n      if (listener === this.eventName) return true;\n      return false;\n    }\n    return this.listener === listener && this.listenerObject === listenerObject;\n  }\n\n  apply(eventName, args) {\n    if (this.isRemoved) return;\n\n    const { listener, listenerObject } = this;\n\n    switch (this.listenerType) {\n      case LISTENER_IS_FUNC:\n        apply(listenerObject, listener, args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_NAMED_FUNC:\n        apply(listenerObject, listenerObject[listener], args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_OBJ: {\n        const func = listener[eventName];\n        if (this.isCatchEmAll || this.eventName === eventName) {\n          if (typeof func === 'function') {\n            func.apply(listener, args);\n          } else {\n            emit(eventName, listener, args);\n          }\n          if (this.callAfterApply) this.callAfterApply();\n        }\n        break;\n      }\n    }\n  }\n}\n","import { EVENT_CATCH_EM_ALL } from './constants';\nimport EventListener from './EventListener';\n\nconst sortByPrioAndId = (a, b) => (a.priority !== b.priority ? b.priority - a.priority : a.id - b.id);\n\nconst cloneArray = (arr) => {\n  if (arr) {\n    return arr.slice(0);\n  }\n};\n\nconst removeListenerItem = (arr, listener) => {\n  const idx = arr.indexOf(listener);\n  if (idx > -1) {\n    arr.splice(idx, 1);\n  }\n};\n\nconst removeListener = (listeners, listener, listenerObject) => {\n  const idx = listeners.findIndex((item) => item.isEqual(listener, listenerObject));\n  if (idx > -1) {\n    listeners[idx].isRemoved = true;\n    listeners.splice(idx, 1);\n  }\n};\n\nconst removeAllListeners = (listeners) => {\n  if (listeners) {\n    listeners.forEach((li) => {\n      li.isRemoved = true;\n    });\n    listeners.length = 0;\n  }\n};\n\nexport default class EventStore {\n  constructor() {\n    this.namedListeners = new Map();\n    this.catchEmAllListeners = [];\n  }\n\n  add(eventListener) {\n    if (eventListener.isCatchEmAll) {\n      this.catchEmAllListeners.push(eventListener);\n      this.catchEmAllListeners.sort(sortByPrioAndId);\n    } else {\n      const { eventName } = eventListener;\n      let namedListeners = this.namedListeners.get(eventName);\n      if (!namedListeners) {\n        namedListeners = [];\n        this.namedListeners.set(eventName, namedListeners);\n      }\n      namedListeners.push(eventListener);\n      namedListeners.sort(sortByPrioAndId);\n    }\n  }\n\n  remove(listener, listenerObject) {\n    if (listenerObject == null && Array.isArray(listener)) {\n      listener.forEach(this.remove.bind(this));\n    } else if (listener == null || (listenerObject == null && listener === EVENT_CATCH_EM_ALL)) {\n      this.removeAllListeners();\n    } else if (listenerObject == null && typeof listener === 'string') {\n      const listeners = this.namedListeners.get(listener);\n      removeAllListeners(listeners);\n    } else if (listener instanceof EventListener) {\n      listener.isRemoved = true;\n      this.namedListeners.forEach((namedListeners) => removeListenerItem(namedListeners, listener));\n      removeListenerItem(this.catchEmAllListeners, listener);\n    } else {\n      this.namedListeners.forEach((namedListeners) => removeListener(namedListeners, listener, listenerObject));\n      removeListener(this.catchEmAllListeners, listener, listenerObject);\n    }\n  }\n\n  removeAllListeners() {\n    this.namedListeners.forEach((namedListeners) => removeAllListeners(namedListeners));\n    this.namedListeners.clear();\n    removeAllListeners(this.catchEmAllListeners);\n  }\n\n  forEach(eventName, fn) {\n    const catchEmAllListeners = cloneArray(this.catchEmAllListeners);\n    const namedListeners = cloneArray(this.namedListeners.get(eventName));\n    if (eventName === EVENT_CATCH_EM_ALL || !namedListeners || namedListeners.length === 0) {\n      catchEmAllListeners.forEach(fn);\n    } else if (catchEmAllListeners.length === 0) {\n      namedListeners.forEach(fn);\n    } else {\n      const iLen = namedListeners.length;\n      const jLen = catchEmAllListeners.length;\n      let i = 0;\n      let j = 0;\n      while (i < iLen || j < jLen) {\n        if (i < iLen) {\n          const cur = namedListeners[i];\n          if (j >= jLen || cur.priority >= catchEmAllListeners[j].priority) {\n            fn(cur);\n            ++i;\n            continue;\n          }\n        }\n        if (j < jLen) {\n          fn(catchEmAllListeners[j]);\n          ++j;\n        }\n      }\n    }\n  }\n}\n","import { EVENT_CATCH_EM_ALL } from './constants';\n\nexport default class EventKeeper {\n  constructor() {\n    this.events = new Map();\n    this.eventNames = new Set();\n  }\n\n  add(eventName) {\n    if (Array.isArray(eventName)) {\n      eventName.forEach((name) => this.eventNames.add(name));\n    } else {\n      this.eventNames.add(eventName);\n    }\n  }\n\n  remove(eventName) {\n    if (Array.isArray(eventName)) {\n      eventName.forEach((name) => this.remove(name));\n    } else {\n      this.eventNames.delete(eventName);\n    }\n  }\n\n  retain(eventName, args) {\n    if (this.eventNames.has(eventName)) {\n      this.events.set(eventName, args);\n    }\n  }\n\n  isKnown(eventName) {\n    return this.eventNames.has(eventName);\n  }\n\n  emit(eventName, eventListener) {\n    if (eventName === EVENT_CATCH_EM_ALL) {\n      this.eventNames.forEach((name) => this.emit(name, eventListener));\n    } else {\n      const args = this.events.get(eventName);\n      if (args) {\n        eventListener.apply(eventName, args);\n      }\n    }\n  }\n}\n","\nexport const definePublicPropertyRO = (obj, name, value) => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n    enumerable: true,\n  });\n  return obj;\n};\n\nexport const definePublicPropertiesRO = (obj, attrs) => {\n  const keys = Object.keys(attrs);\n  const len = keys.length;\n  for (let i = 0; i < len; i += 1) {\n    definePublicPropertyRO(obj, keys[i], attrs[keys[i]]);\n  }\n  return obj;\n};\n\nexport const defineHiddenPropertyRO = (obj, name, value) => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n  });\n  return obj;\n};\n","\nimport { LOG_NAMESPACE } from './constants';\n\nexport const hasConsole = typeof console !== 'undefined';\n\nexport const warn = hasConsole ? console[console.warn ? 'warn' : 'log'].bind(console, LOG_NAMESPACE) : () => undefined; // eslint-disable-line\n","import EventListener from './EventListener';\n\nimport { hasConsole, warn } from './logUtils';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  PRIO_DEFAULT,\n} from './constants';\n\nconst registerEventListener = (store, keeper, eventName, priority, listener, listenerObject) => {\n  const eventListener = new EventListener(eventName, priority, listener, listenerObject);\n  store.add(eventListener);\n  keeper.emit(eventName, eventListener);\n  return eventListener;\n};\n\nconst subscribeTo = (store, keeper, args) => {\n  const len = args.length;\n  const typeOfFirstArg = typeof args[0];\n\n  let eventName;\n  let priority;\n  let listener;\n  let listenerObject;\n\n  if (len >= 2 && len <= 3 && typeOfFirstArg === 'number') {\n    eventName = EVENT_CATCH_EM_ALL;\n    [priority, listener, listenerObject] = args;\n  } else if (len >= 3 && len <= 4 && typeof args[1] === 'number') {\n    [eventName, priority, listener, listenerObject] = args;\n  } else {\n    priority = PRIO_DEFAULT;\n    if (typeOfFirstArg === 'string' || Array.isArray(args[0])) {\n      [eventName, listener, listenerObject] = args;\n    } else {\n      eventName = EVENT_CATCH_EM_ALL;\n      [listener, listenerObject] = args;\n    }\n  }\n\n  if (!listener && hasConsole) {\n    warn('called with insufficient arguments!', args);\n    return;\n  }\n\n  const register = (prio) => (event) => registerEventListener(\n    store, keeper, event,\n    prio, listener, listenerObject,\n  );\n\n  if (Array.isArray(eventName)) {\n    return eventName.map((name) => {\n      if (Array.isArray(name)) {\n        return register(name[1])(name[0]);\n      }\n      return register(priority)(name);\n    });\n  }\n  return register(priority)(eventName);\n};\n\nexport default subscribeTo;\n","import EventStore from './EventStore';\nimport EventKeeper from './EventKeeper';\nimport { defineHiddenPropertyRO } from './propUtils';\nimport subscribeTo from './subscribeTo';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n} from './constants';\n\nconst removeListener = (obj) => (listener) => {\n  listener.callAfterApply = () => obj.off(listener);\n};\n\nexport default function injectEventizeApi(obj) {\n  if (obj[NAMESPACE]) return obj;\n\n  const store = new EventStore();\n  const keeper = new EventKeeper();\n  defineHiddenPropertyRO(obj, NAMESPACE, { keeper, store });\n\n  Object.assign(obj, {\n    // ----------------------------------------------------------------------------------------\n    //\n    // .on( eventName*, [ priority, ] listenerFunc [, listenerObject] )\n    // .on( eventName*, [ priority, ] listenerFuncName, listenerObject )\n    // .on( eventName*, [ priority, ] listenerObject )\n    //\n    // .on( [ priority, ] listenerFunc [, listenerObject] )\n    //                                            => listenerObject.on( '*', listenerFunc )\n    // .on( [ priority, ] listenerObject )\n    //                                            => listenerObject.on( '*', listenerObject )\n    //\n    // .off(...)\n    //\n    // eventName*: eventName | Array<eventName>\n    // eventName: string\n    //\n    // listenerFunc: function\n    // listenerFuncName: string\n    // listenerObject: object\n    //\n    // ----------------------------------------------------------------------------------------\n    on(...args) {\n      return subscribeTo(store, keeper, args);\n    },\n    once(...args) {\n      const listeners = subscribeTo(store, keeper, args);\n      if (Array.isArray(listeners)) {\n        listeners.forEach(removeListener(obj));\n      } else {\n        removeListener(obj)(listeners);\n      }\n      return listeners;\n    },\n    off(listener, listenerObject) {\n      store.remove(listener, listenerObject);\n      if (Array.isArray(listener)) {\n        keeper.remove(listener.filter((li) => typeof li === 'string'));\n      } else if (typeof listener === 'string') {\n        keeper.remove(listener);\n      }\n    },\n    emit(eventName, ...args) {\n      if (Array.isArray(eventName)) {\n        eventName.forEach((event) => {\n          store.forEach(event, (listener) => listener.apply(event, args));\n          keeper.retain(event, args);\n        });\n      } else if (eventName !== EVENT_CATCH_EM_ALL) {\n        store.forEach(eventName, (listener) => listener.apply(eventName, args));\n        keeper.retain(eventName, args);\n      }\n    },\n    retain(eventName) {\n      keeper.add(eventName);\n    },\n  });\n  return obj;\n}\n","import injectEventizeApi from './inject';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MAX,\n  PRIO_MIN,\n} from './constants';\n\nfunction eventize(obj) {\n  return injectEventizeApi(obj);\n}\n\neventize.inject = injectEventizeApi;\n\neventize.extend = (obj) => injectEventizeApi(Object.create(obj));\n\neventize.create = (obj) => {\n  const eventizer = injectEventizeApi({});\n  eventizer.on(EVENT_CATCH_EM_ALL, PRIO_DEFAULT, obj);\n  return eventizer;\n};\n\neventize.is = (obj) => !!(obj && obj[NAMESPACE]);\n\nObject.assign(eventize, {\n  PRIO_MAX,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MIN,\n});\n\nexport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n  PRIO_MAX,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MIN,\n};\n\nexport default eventize;\n"],"names":["EVENT_CATCH_EM_ALL","LISTENER_IS_FUNC","LISTENER_IS_NAMED_FUNC","LISTENER_IS_OBJ","PRIO_MAX","Number","POSITIVE_INFINITY","PRIO_MIN","NEGATIVE_INFINITY","NAMESPACE","Symbol","eventize","apply","context","func","args","emit","eventName","listener","concat","detectListenerType","lastId","createUniqId","EventListener","constructor","priority","listenerObject","id","isCatchEmAll","listenerType","callAfterApply","undefined","isRemoved","isEqual","this","sortByPrioAndId","a","b","cloneArray","arr","slice","removeListenerItem","idx","indexOf","splice","removeListener","listeners","findIndex","item","removeAllListeners","forEach","li","length","EventStore","namedListeners","Map","catchEmAllListeners","add","eventListener","push","sort","get","set","remove","Array","isArray","bind","clear","fn","iLen","jLen","i","j","cur","EventKeeper","events","eventNames","Set","name","delete","retain","has","isKnown","defineHiddenPropertyRO","obj","value","Object","defineProperty","configurable","hasConsole","console","warn","subscribeTo","store","keeper","len","typeOfFirstArg","register","prio","event","registerEventListener","map","off","injectEventizeApi","assign","on","once","filter","inject","extend","create","eventizer","is","PRIO_A","PRIO_B","PRIO_C","PRIO_DEFAULT","PRIO_LOW"],"mappings":"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"}