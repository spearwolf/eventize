{"version":3,"file":"eventize.umd.js.map","sources":["../src/constants.js","../src/EventListener.js","../src/EventStore.js","../src/EventKeeper.js","../src/propUtils.js","../src/logUtils.js","../src/subscribeTo.js","../src/inject.js","../src/eventize.js"],"sourcesContent":["export const EVENT_CATCH_EM_ALL = '*';\n\nexport const LISTENER_UNKNOWN       = 0;\nexport const LISTENER_IS_FUNC       = 1;\nexport const LISTENER_IS_NAMED_FUNC = 2;\nexport const LISTENER_IS_OBJ        = 4;\n\nexport const PRIO_MAX     = Number.POSITIVE_INFINITY;\nexport const PRIO_A       = 1000000000;\nexport const PRIO_B       = 1000000;\nexport const PRIO_C       = 1000;\nexport const PRIO_DEFAULT = 0;\nexport const PRIO_LOW     = -10000;\nexport const PRIO_MIN     = Number.NEGATIVE_INFINITY;\n\nexport const NAMESPACE = (() => {\n  if (!Symbol.eventize) {\n    Symbol.eventize = Symbol('eventize');\n  }\n  return Symbol.eventize;\n})();\n\nexport const LOG_NAMESPACE = '[@spearwolf/eventize]';\n","import {\n  EVENT_CATCH_EM_ALL,\n  LISTENER_IS_FUNC,\n  LISTENER_IS_NAMED_FUNC,\n  LISTENER_IS_OBJ,\n} from './constants';\n\nconst apply = (context, func, args) => {\n  if (typeof func === 'function') {\n    func.apply(context, args);\n  }\n};\n\nconst emit = (eventName, listener, args) => apply(\n  listener,\n  listener.emit,\n  [eventName].concat(args),\n);\n\nconst detectListenerType = (listener) => {\n  switch (typeof listener) {\n    case 'function':\n      return LISTENER_IS_FUNC;\n    case 'string':\n      return LISTENER_IS_NAMED_FUNC;\n    case 'object':\n      return LISTENER_IS_OBJ;\n  }\n};\n\nlet lastId = 0;\nconst createUniqId = () => ++lastId;\n\nexport default class EventListener {\n  constructor(eventName, priority, listener, listenerObject = null) {\n    this.id = createUniqId();\n    this.eventName = eventName;\n    this.isCatchEmAll = eventName === EVENT_CATCH_EM_ALL;\n    this.listener = listener;\n    this.listenerObject = listenerObject;\n    this.priority = priority;\n    this.listenerType = detectListenerType(listener);\n    this.callAfterApply = undefined;\n    this.isRemoved = false;\n  }\n\n  isEqual(listener, listenerObject = null) {\n    if (listener === this) return true;\n    if (typeof listener === 'number' && listener === this.id) return true;\n    if (listenerObject === null && typeof listener === 'string') {\n      if (listener === EVENT_CATCH_EM_ALL) return true;\n      if (listener === this.eventName) return true;\n      return false;\n    }\n    return this.listener === listener && this.listenerObject === listenerObject;\n  }\n\n  apply(eventName, args) {\n    if (this.isRemoved) return;\n\n    const { listener, listenerObject } = this;\n\n    switch (this.listenerType) {\n      case LISTENER_IS_FUNC:\n        apply(listenerObject, listener, args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_NAMED_FUNC:\n        apply(listenerObject, listenerObject[listener], args);\n        if (this.callAfterApply) this.callAfterApply();\n        break;\n\n      case LISTENER_IS_OBJ: {\n        const func = listener[eventName];\n        if (this.isCatchEmAll || this.eventName === eventName) {\n          if (typeof func === 'function') {\n            func.apply(listener, args);\n          } else {\n            emit(eventName, listener, args);\n          }\n          if (this.callAfterApply) this.callAfterApply();\n        }\n        break;\n      }\n    }\n  }\n}\n","import { EVENT_CATCH_EM_ALL } from './constants';\nimport EventListener from './EventListener';\n\nconst sortByPrioAndId = (a, b) => (a.priority !== b.priority ? b.priority - a.priority : a.id - b.id);\n\nconst cloneArray = (arr) => {\n  if (arr) {\n    return arr.slice(0);\n  }\n};\n\nconst removeListenerItem = (arr, listener) => {\n  const idx = arr.indexOf(listener);\n  if (idx > -1) {\n    arr.splice(idx, 1);\n  }\n};\n\nconst removeListener = (listeners, listener, listenerObject) => {\n  const idx = listeners.findIndex(item => item.isEqual(listener, listenerObject));\n  if (idx > -1) {\n    listeners[idx].isRemoved = true;\n    listeners.splice(idx, 1);\n  }\n};\n\nconst removeAllListeners = (listeners) => {\n  if (listeners) {\n    listeners.forEach((li) => {\n      li.isRemoved = true;\n    });\n    listeners.length = 0;\n  }\n};\n\nexport default class EventStore {\n  constructor() {\n    this.namedListeners = new Map();\n    this.catchEmAllListeners = [];\n  }\n\n  add(eventListener) {\n    if (eventListener.isCatchEmAll) {\n      this.catchEmAllListeners.push(eventListener);\n      this.catchEmAllListeners.sort(sortByPrioAndId);\n    } else {\n      const { eventName } = eventListener;\n      let namedListeners = this.namedListeners.get(eventName);\n      if (!namedListeners) {\n        namedListeners = [];\n        this.namedListeners.set(eventName, namedListeners);\n      }\n      namedListeners.push(eventListener);\n      namedListeners.sort(sortByPrioAndId);\n    }\n  }\n\n  remove(listener, listenerObject) {\n    if (listenerObject == null && Array.isArray(listener)) {\n      listener.forEach(this.remove.bind(this));\n    } else if (listener == null || (listenerObject == null && listener === EVENT_CATCH_EM_ALL)) {\n      this.removeAllListeners();\n    } else if (listenerObject == null && typeof listener === 'string') {\n      const listeners = this.namedListeners.get(listener);\n      removeAllListeners(listeners);\n    } else if (listener instanceof EventListener) {\n      listener.isRemoved = true;\n      this.namedListeners.forEach(namedListeners => removeListenerItem(namedListeners, listener));\n      removeListenerItem(this.catchEmAllListeners, listener);\n    } else {\n      this.namedListeners.forEach(namedListeners => removeListener(namedListeners, listener, listenerObject));\n      removeListener(this.catchEmAllListeners, listener, listenerObject);\n    }\n  }\n\n  removeAllListeners() {\n    this.namedListeners.forEach(namedListeners => removeAllListeners(namedListeners));\n    this.namedListeners.clear();\n    removeAllListeners(this.catchEmAllListeners);\n  }\n\n  forEach(eventName, fn) {\n    const catchEmAllListeners = cloneArray(this.catchEmAllListeners);\n    const namedListeners = cloneArray(this.namedListeners.get(eventName));\n    if (eventName === EVENT_CATCH_EM_ALL || !namedListeners || namedListeners.length === 0) {\n      catchEmAllListeners.forEach(fn);\n    } else if (catchEmAllListeners.length === 0) {\n      namedListeners.forEach(fn);\n    } else {\n      const iLen = namedListeners.length;\n      const jLen = catchEmAllListeners.length;\n      let i = 0;\n      let j = 0;\n      while (i < iLen || j < jLen) {\n        if (i < iLen) {\n          const cur = namedListeners[i];\n          if (j >= jLen || cur.priority >= catchEmAllListeners[j].priority) {\n            fn(cur);\n            ++i;\n            continue;\n          }\n        }\n        if (j < jLen) {\n          fn(catchEmAllListeners[j]);\n          ++j;\n        }\n      }\n    }\n  }\n}\n","import { EVENT_CATCH_EM_ALL } from './constants';\n\nexport default class EventKeeper {\n  constructor() {\n    this.events = new Map();\n    this.eventNames = new Set();\n  }\n\n  add(eventName) {\n    if (Array.isArray(eventName)) {\n      eventName.forEach(en => this.eventNames.add(en));\n    } else {\n      this.eventNames.add(eventName);\n    }\n  }\n\n  remove(eventName) {\n    if (Array.isArray(eventName)) {\n      eventName.forEach(en => this.remove(en));\n    } else {\n      this.eventNames.delete(eventName);\n    }\n  }\n\n  retain(eventName, args) {\n    if (this.eventNames.has(eventName)) {\n      this.events.set(eventName, args);\n    }\n  }\n\n  isKnown(eventName) {\n    return this.eventNames.has(eventName);\n  }\n\n  emit(eventName, eventListener) {\n    if (eventName === EVENT_CATCH_EM_ALL) {\n      this.eventNames.forEach(en => this.emit(en, eventListener));\n    } else {\n      const args = this.events.get(eventName);\n      if (args) {\n        eventListener.apply(eventName, args);\n      }\n    }\n  }\n}\n","\nexport const definePublicPropertyRO = (obj, name, value) => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n    enumerable: true,\n  });\n  return obj;\n};\n\nexport const definePublicPropertiesRO = (obj, attrs) => {\n  const keys = Object.keys(attrs);\n  const len = keys.length;\n  for (let i = 0; i < len; i += 1) {\n    definePublicPropertyRO(obj, keys[i], attrs[keys[i]]);\n  }\n  return obj;\n};\n\nexport const defineHiddenPropertyRO = (obj, name, value) => {\n  Object.defineProperty(obj, name, {\n    value,\n    configurable: true,\n  });\n  return obj;\n};\n","\nimport { LOG_NAMESPACE } from './constants';\n\nexport const hasConsole = typeof console !== 'undefined';\n\nexport const warn = hasConsole ? console[console.warn ? 'warn' : 'log'].bind(console, LOG_NAMESPACE) : () => undefined; // eslint-disable-line\n","import EventListener from './EventListener';\n\nimport { hasConsole, warn } from './logUtils';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  PRIO_DEFAULT,\n} from './constants';\n\nconst registerEventListener = (store, keeper, eventName, priority, listener, listenerObject) => {\n  const eventListener = new EventListener(eventName, priority, listener, listenerObject);\n  store.add(eventListener);\n  keeper.emit(eventName, eventListener);\n  return eventListener;\n};\n\nconst subscribeTo = (store, keeper, args) => {\n  const len = args.length;\n  const typeOfFirstArg = typeof args[0];\n\n  let eventName;\n  let priority;\n  let listener;\n  let listenerObject;\n\n  if (len >= 2 && len <= 3 && typeOfFirstArg === 'number') {\n    eventName = EVENT_CATCH_EM_ALL;\n    [priority, listener, listenerObject] = args;\n  } else if (len >= 3 && len <= 4 && typeof args[1] === 'number') {\n    [eventName, priority, listener, listenerObject] = args;\n  } else {\n    priority = PRIO_DEFAULT;\n    if (typeOfFirstArg === 'string' || Array.isArray(args[0])) {\n      [eventName, listener, listenerObject] = args;\n    } else {\n      eventName = EVENT_CATCH_EM_ALL;\n      [listener, listenerObject] = args;\n    }\n  }\n\n  if (!listener && hasConsole) {\n    warn('called with insufficient arguments!', args);\n    return;\n  }\n\n  const register = prio => event => registerEventListener(\n    store, keeper, event,\n    prio, listener, listenerObject,\n  );\n\n  if (Array.isArray(eventName)) {\n    return eventName.map((name) => {\n      if (Array.isArray(name)) {\n        return register(name[1])(name[0]);\n      }\n      return register(priority)(name);\n    });\n  }\n  return register(priority)(eventName);\n};\n\nexport default subscribeTo;\n","import EventStore from './EventStore';\nimport EventKeeper from './EventKeeper';\nimport { defineHiddenPropertyRO } from './propUtils';\nimport subscribeTo from './subscribeTo';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n} from './constants';\n\nconst removeListener = obj => (listener) => {\n  listener.callAfterApply = () => obj.off(listener);\n};\n\nexport default function injectEventizeApi(obj) {\n  if (obj[NAMESPACE]) return obj;\n\n  const store = new EventStore();\n  const keeper = new EventKeeper();\n  defineHiddenPropertyRO(obj, NAMESPACE, { keeper, store });\n\n  Object.assign(obj, {\n    // ----------------------------------------------------------------------------------------\n    //\n    // .on( eventName*, [ priority, ] listenerFunc [, listenerObject] )\n    // .on( eventName*, [ priority, ] listenerFuncName, listenerObject )\n    // .on( eventName*, [ priority, ] listenerObject )\n    //\n    // .on( [ priority, ] listenerFunc [, listenerObject] )\n    //                                            => listenerObject.on( '*', listenerFunc )\n    // .on( [ priority, ] listenerObject )\n    //                                            => listenerObject.on( '*', listenerObject )\n    //\n    // .off(...)\n    //\n    // eventName*: eventName | Array<eventName>\n    // eventName: string\n    //\n    // listenerFunc: function\n    // listenerFuncName: string\n    // listenerObject: object\n    //\n    // ----------------------------------------------------------------------------------------\n    on(...args) {\n      return subscribeTo(store, keeper, args);\n    },\n    once(...args) {\n      const listeners = subscribeTo(store, keeper, args);\n      if (Array.isArray(listeners)) {\n        listeners.forEach(removeListener(obj));\n      } else {\n        removeListener(obj)(listeners);\n      }\n      return listeners;\n    },\n    off(listener, listenerObject) {\n      store.remove(listener, listenerObject);\n      if (Array.isArray(listener)) {\n        keeper.remove(listener.filter(li => typeof li === 'string'));\n      } else if (typeof listener === 'string') {\n        keeper.remove(listener);\n      }\n    },\n    emit(eventName, ...args) {\n      if (Array.isArray(eventName)) {\n        eventName.forEach((event) => {\n          store.forEach(event, listener => listener.apply(event, args));\n          keeper.retain(event, args);\n        });\n      } else if (eventName !== EVENT_CATCH_EM_ALL) {\n        store.forEach(eventName, listener => listener.apply(eventName, args));\n        keeper.retain(eventName, args);\n      }\n    },\n    retain(eventName) {\n      keeper.add(eventName);\n    },\n  });\n  return obj;\n}\n","import injectEventizeApi from './inject';\n\nimport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MAX,\n  PRIO_MIN,\n} from './constants';\n\nfunction eventize(obj) {\n  return injectEventizeApi(obj);\n}\n\neventize.inject = injectEventizeApi;\n\neventize.extend = obj => injectEventizeApi(Object.create(obj));\n\neventize.create = (obj) => {\n  const eventizer = injectEventizeApi({});\n  eventizer.on(EVENT_CATCH_EM_ALL, PRIO_DEFAULT, obj);\n  return eventizer;\n};\n\neventize.is = obj => !!(obj && obj[NAMESPACE]);\n\nObject.assign(eventize, {\n  PRIO_MAX,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MIN,\n});\n\nexport {\n  EVENT_CATCH_EM_ALL,\n  NAMESPACE,\n  PRIO_MAX,\n  PRIO_A,\n  PRIO_B,\n  PRIO_C,\n  PRIO_DEFAULT,\n  PRIO_LOW,\n  PRIO_MIN,\n};\n\nexport default eventize;\n"],"names":["EVENT_CATCH_EM_ALL","PRIO_MAX","Number","POSITIVE_INFINITY","PRIO_MIN","NEGATIVE_INFINITY","NAMESPACE","Symbol","eventize","apply","context","func","args","detectListenerType","listener","lastId","createUniqId","EventListener","eventName","priority","listenerObject","id","isCatchEmAll","listenerType","callAfterApply","undefined","isRemoved","this","emit","concat","sortByPrioAndId","a","b","cloneArray","arr","slice","removeListenerItem","idx","indexOf","splice","removeListener","listeners","findIndex","item","isEqual","removeAllListeners","forEach","li","length","EventStore","namedListeners","Map","catchEmAllListeners","eventListener","push","sort","get","set","Array","isArray","remove","bind","clear","fn","iLen","jLen","i","j","cur","EventKeeper","events","eventNames","Set","en","_this","add","_this2","delete","has","_this3","defineHiddenPropertyRO","obj","name","value","Object","defineProperty","configurable","hasConsole","console","warn","subscribeTo","store","keeper","len","typeOfFirstArg","register","prio","event","registerEventListener","map","off","injectEventizeApi","assign","on","once","filter","retain","inject","extend","create","eventizer","is","PRIO_A","PRIO_B","PRIO_C","PRIO_DEFAULT","PRIO_LOW"],"mappings":"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"}